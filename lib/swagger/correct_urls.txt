OK:
    /api/v1/version -> ok
    /api/v1/wallets/folderName -> ok        
    /api/v1/resendUnconfirmedTxns -> ok    
    /api/v1/coinSupply -> ok
    
With a wierd problem:
    /api/v1/csrf

Pending:
    Problems with the response:
        /api/v1/addresscount
            Description:
                -Problems with returning a map[string]string
        /api/v1/network/defaultConnections 
            Description: 
                -Problems with returning a []string
        /api/v1/wallets 
            Description:
                -Problems in response
    
    General Problem:
        -Params in the url
    /api/v1/health
        Description:
            Problems with response:
    Params in Header:
        /api/v2/address/verify
        /api/v2/transaction/verify
            Description:
                -Problems with response, multiple response
        /api/v1/blockchain/metadata
            Description:
                -Problems with response:
        /api/v1/blockchain/progress
            Description:
                -Problems with response
        /api/v1/wallet/newSeed
        /api/v1/wallet/create
            Description:
                -Response struct problems 
        /api/v1/wallet/newAddress
            Description:
        /api/v1/wallet/update
        /api/v1/wallet/spend
            Description:
                -Response struct problems
        /api/v1/wallet/unload
        /api/v1/wallet/encrypt
            Description:
                -Response struct problems
        /api/v1/wallet/decrypt
            Description:
                -Response struct problems
        /api/v1/wallet/seed
        /api/v2/wallet/recover
                -Response struct problems
        /api/v1/transaction
            Description:
                -Response struct problems
        /api/v1/injectTransaction

Problems:
    Problems with address args:
        /api/v1/balance
            Description:
                Looks less hard to solve
            Example:
                http://127.0.0.1:6420/api/v1/balance\?addrs\=7cpQ7t3PZZXvjTst8G7Uvs7XH4LeM8fBPD,nu7eSpT6hr5P21uzw7bnbxm83B6ywSjHdq,2jBbGxZRGoQG1mqhPBnXnLTxK6oxsTf8os6
        /api/v1/outputs
            Description:
                Looks Hard to fix, becouse has to many urls variants 
            Example:
                http://127.0.0.1:6420/api/v1/outputs?addrs=6dkVxyKFbFKg9Vdg6HPg1UANLByYRqkrdY
                http://127.0.0.1:6420/api/v1/outputs?hashes=7669ff7350d2c70a88093431a7b30d3e69dda2319dcb048aa80fa0d19e12ebe0
        /api/v1/wallet
            Description:
                -Is not too hard, if the address looks like next example this can solve:
                    http://127.0.0.1:6420/api/v1/{id=2017_11_25_e5fb.wlt}
                    Where {expression} represent the wallet.
                -Also problems with composed and chained response structs (May )
            Example:
                 http://127.0.0.1:6420/api/v1/wallet?id=2017_11_25_e5fb.wlt
        /api/v1/wallet/transactions
            Description:
                -This just has Wallet_Id and verbose, so, should be a more easy to fix
                -Also Problems with response structs ...
            Example:
                http://127.0.0.1:6420/api/v1/wallet/transactions?id=2017_11_25_e5fb.wlt&verbose=1
                http://127.0.0.1:6420/api/v1/wallet/transactions?id=2017_11_25_e5fb.wlt

        /api/v1/wallet/balance
            Description:
                -Idem, Solve with {balance_id}
                -Response struct problems
            Example:
                http://127.0.0.1:6420/api/v1/wallet/balance?id=2018_03_07_3088.wlt
        /api/v1/wallet/transaction
            Description:
                -In README.md of the api the say "Json Body" (Precise this)
                -There are a lot of examples of json body, so, wich one are right?
                -If the params are in the body, can be solve..(Precise this)                
                -Response struct problems
            Example:    
                http://127.0.0.1:6420/api/v1/wallet/transaction {some Json}
        /api/v1/pendingTxs
            Description:
                -Is just verbose, so can be active multiple urls
                -Response struct problems
            Example:
                http://127.0.0.1:6420/api/v1/pendingTxs?verbose=1
        /api/v1/rawtx
            Description:
                -Is not too hard, if the address looks like next example this can solve:
                    http://127.0.0.1:6420/api/v1/rawtx/{a6446654829a4a844add9f181949d12f8291fdd2c0fcb22200361e90e814e2d3}
                    Where {tx_id} represent the wallet.
            Example:
                http://127.0.0.1:6420/api/v1/rawtx?txid=a6446654829a4a844add9f181949d12f8291fdd2c0fcb22200361e90e814e2d3                
        /api/v1/transactions
            Description:
                -A lots of variant params in the url
                -Response struct problems
            Example:
                http://127.0.0.1:6420/api/v1/transactions?addrs=7cpQ7t3PZZXvjTst8G7Uvs7XH4LeM8fBPD,6dkVxyKFbFKg9Vdg6HPg1UANLByYRqkrdY&confirmed=1
                http://127.0.0.1:6420/api/v1/transactions?addrs=7cpQ7t3PZZXvjTst8G7Uvs7XH4LeM8fBPD,6dkVxyKFbFKg9Vdg6HPg1UANLByYRqkrdY
        /api/v1/block
            Description:
                -A lots of variant params in the url
                -Response struct problems
            Example:
                http://127.0.0.1:6420/api/v1/block?hash=6eafd13ab6823223b714246b32c984b56e0043412950faf17defdbb2cbf3fe30
        /api/v1/blocks
            Description:
                -A lots of variant params in the url
                -Response struct problems
            Example:
                http://127.0.0.1:6420/api/v1/blocks?start=101&end=102
        /api/v1/last_blocks
            Description:
                -A lots of variant params in the url
                -Response struct problems
            Example:
                http://127.0.0.1:6420/api/v1/last_blocks?num=2
                http://127.0.0.1:6420/api/v1/last_blocks?num=2&verbose=1
        /api/v1/explorer/address
            Description:
                -Is not too hard, if the address looks like next example this can solve:
                    http://127.0.0.1:6420/api/v1/explorer/address/{2NfNKsaGJEndpSajJ6TsKJfsdDjW2gFsjXg}
                    Where {address} represent the address.
                -Response struct problems
            Example:
                http://127.0.0.1:6420/api/v1/explorer/address?address=2NfNKsaGJEndpSajJ6TsKJfsdDjW2gFsjXg
        /api/v1/uxout
            Description:
                -Is not too hard, if the address looks like next example this can solve:
                    http://127.0.0.1:6420/api/v1/uxout/{8b64d9b058e10472b9457fd2d05a1d89cbbbd78ce1d97b16587d43379271bed1}
                    Where {ux_id} represent the ux_id.
            Example:
                http://127.0.0.1:6420/api/v1/uxout?uxid=8b64d9b058e10472b9457fd2d05a1d89cbbbd78ce1d97b16587d43379271bed1
        /api/v1/address_uxouts
            Description:
                -Is not too hard, if the address looks like next example this can solve:
                    http://127.0.0.1:6420/api/v1/address_uxouts/{6dkVxyKFbFKg9Vdg6HPg1UANLByYRqkrdY}
                    Where {address} represent the address.
            Example:
                http://127.0.0.1:6420/api/v1/address_uxouts?address=6dkVxyKFbFKg9Vdg6HPg1UANLByYRqkrdY
        /api/v1/richlist
            Description:
                -A lots of variant params in the url
            Example:
                http://127.0.0.1:6420/api/v1/richlist?n=4&include-distribution=true
        /api/v1/network/connection
            Description:
                -A lots of variant params in the url                
            Example:
                http://127.0.0.1:6420/api/v1/network/connection?addr=176.9.84.75:6000
        /api/v1/network/connections
            Description:
                -A lots of variant params in the url                
            Example:
                http://127.0.0.1:6420/api/v1/network/connections
        /api/v1/network/connection/disconnect
            Description:
                -A lots of variant params in the url                
            Example:
                http://127.0.0.1:6420/api/v1/network/connection/disconnect?id=999

General Problems:
    1 -> In some urls, params in urls 
    2 -> Composed and Chained Response Structs (This is my problem!! Is a problem with some estructs when we compose it, that lost fields, is pending too)
    3 -> If the params are in the body, can be solve..(min, almost solved, this are the pending )
    4 -> Problems with returning a []string and map[string]string