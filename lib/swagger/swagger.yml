basePath: /v2_add_base_path
consumes:
- application/json
definitions:
  buildInfo:
    description: BuildInfo represents the build info
    properties:
      branch:
        description: git branch name
        type: string
        x-go-name: Branch
      commit:
        description: git commit id
        type: string
        x-go-name: Commit
      version:
        description: version number
        type: string
        x-go-name: Version
    type: object
    x-go-name: BuildInfo
    x-go-package: github.com/skycoin/skycoin/src/readable
host: localhost
info:
  contact:
    email: john.doe@example.com
    name: Maceo Doe
    url: http://john.doe.com
  description: |-
    the purpose of this application is to provide an application
    that is using plain go code to define an API

    This should demonstrate all the possible comment annotations
    that are available to turn go code into a fully compliant swagger 2.0 spec
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  termsOfService: there are no TOS at this moment, use at your own risk we take no
    responsibility
  title: Skycoin API.
  version: 0.1.1
paths:
  /api/v1/csrf:
      get:
        description: |-
          Response -> CSRF token to use in POST requests
        operationId: csrfToken
        produces:
        - application/json
        responses:
          "200":
            $ref: '#/responses/csrfTokenResponse'
          default:
            $ref: '#/responses/genericError'
        schemes:
        - http
        - https
        security:
        - csrfAuth: []
        - oauth:
          - read
          - write
        summary: Creates a new CSRF token. Previous CSRF tokens are invalidated by this
          call.
  /api/v1/coinSupply:
    get:
      description: coinSupplyHandler returns coin distribution supply stats
      operationId: coinSupply
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/coinSupply'
        "422":
          $ref: '#/responses/validationError'
        default:
          $ref: '#/responses/genericError'
      schemes:
      - http
      - https
      security:
      - csrfAuth: []
      - oauth:
        - read
        - write
  /api/v1/resendUnconfirmedTxns:
    post:
      consumes:
      - application/json
      description: Broadcasts all unconfirmed transactions from the unconfirmed transaction
        pool
      operationId: resendUnconfirmedTxns
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/resendResult'
        default:
          $ref: '#/responses/genericError'
      schemes:
      - http
      - https
      security:
      - csrfAuth: []
      - oauth:
        - read
        - write
  /api/v1/version:
    get:
      description: versionHandler returns the application version info
      operationId: version
      produces:
      - application/json
      responses:
        "200":
          description: buildInfo
          schema:
            $ref: '#/definitions/buildInfo'
        default:
          $ref: '#/responses/genericError'
      schemes:
      - http
      - https
      security:
      - csrfAuth: []
      - oauth:
        - read
        - write
  /api/v1/wallets/folderName:
    get:
      description: Returns the wallet directory path
      operationId: walletFolder
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/walletFolderResponse'
        default:
          $ref: '#/responses/genericError'
      schemes:
      - http
      - https
      security:
      - csrfAuth: []
      - oauth:
        - read
        - write
produces:
- application/json
responses:
  coinSupply:
    description: CoinSupply records the coin supply info
    headers:
      current_coinhour_supply:
        description: CurrentCoinHourSupply is coins hours in non distribution addresses
        type: string
      current_supply:
        description: 'Coins distributed beyond the project:'
        type: string
      locked_distribution_addresses:
        description: Distribution addresses which are locked and do not count towards
          total supply
        items:
          type: string
        type: array
      max_supply:
        description: MaxSupply is the maximum number of coins to be distributed ever
        type: string
      total_coinhour_supply:
        description: TotalCoinHourSupply is coin hours in all addresses including
          unlocked distribution addresses
        type: string
      total_supply:
        description: TotalSupply is CurrentSupply plus coins held by the distribution
          addresses that are spendable
        type: string
      unlocked_distribution_addresses:
        description: Distribution addresses which count towards total supply
        items:
          type: string
        type: array
  csrfTokenResponse:
    description: Response to address /api/v1/csrf
    schema:
      properties:
        csrf_token:
          description: Csrf Token is here
          x-go-name: csrfToken
          type: string
  genericError:
    description: |-
      A GenericError is the default error message that is generated.
      For certain status codes there are more appropriate error structures.
    schema:
      properties:
        code:
          format: int32
          type: integer
          x-go-name: Code
        message:
          type: string
          x-go-name: Message
      type: object
  resendResult:
    description: ResendResult the result of rebroadcasting transaction
    headers:
      txids:
        items:
          type: string
        type: array
  validationError:
    description: |-
      A ValidationError is an that is generated for validation failures.
      It has the same fields as a generic error but adds a Field property.
    schema:
      properties:
        code:
          format: int32
          type: integer
          x-go-name: Code
        field:
          type: string
          x-go-name: Field
        message:
          type: string
          x-go-name: Message
      type: object
  walletFolderResponse:
    description: WalletFolder struct
    headers:
      address:
        type: string
schemes:
- http
- https
securityDefinitions:
  csrfAuth:         # arbitrary name for the security scheme; will be used in the "security" key later
    type: apiKey
    in: header
    name: csrf_Token  # cookie name
swagger: "2.0"
x-meta-array:
- value1
- value2
x-meta-array-obj:
- name: obj
  value: field
x-meta-value: value
